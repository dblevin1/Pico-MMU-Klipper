### Include in printer.cfg
### At the moment this configuration is only meant for mechanical testing 


###_______________  STINGER PICO MU  _____________________

[servo sp_servo]
pin: PB6

initial_angle: 0
maximum_servo_angle: 140
minimum_pulse_width: 0.000700
maximum_pulse_width: 0.002300


[manual_stepper sp_motor]   ; Motor 7  LDO-42STH40-1684AC
step_pin: PE6
dir_pin: PA14
enable_pin: !PE0
full_steps_per_rotation: 200
rotation_distance: 18.234
microsteps: 16


[tmc2240 manual_stepper sp_motor]
cs_pin: PD3
spi_bus: spi1
run_current: 0.7
hold_current: 0.4
interpolate: true
stealthchop_threshold: 99999
driver_SGT: 4
driver_TBL: 1
driver_TOFF: 4
driver_HSTRT: 3
driver_HEND: 3




##_____________VARIABLES _____________

[gcode_macro _SP_VARS]

# Lanes
variable_lanes: 3    # number of lanes
variable_angles: 25, 75, 125    # angles where the lanes are engaged
variable_idle_angles: 50, 100   # idle positions, usually in-between the lanes 
variable_angle_park: 0 # park positions where no lane is engaged, usually at 0
variable_angle_offset: 0    # fine tune the angle offset in case it drifts over time from the initial set values 
variable_switch_time: 0.5  # seconds it takes for the servo to reach the commanded angle


# Approach
variable_tandem_push_speed: 10  # mm/s
variable_tandem_distance: 10  # mm
variable_dist_gear_to_y: 100 # mm distance from the extruder gear entry to clearing the Y entry


# Inside Extruder
variable_end_retract: 12.5 # mm - retract amount at the end of the print. This value is primed back at print start.
variable_load_len: 65.0 # distance used for filament load
variable_load_prime_len: 44.0 # amount of priming/purging after the filament is loaded
variable_unload_len: 50.0 # distance used for filament unload
variable_purge_len: 50.0 # filament length used by the manual purge macro

# Motor
variable_motor_speed: 100
variable_motor_accel: 500
variable_motor_sync_speed: 30
variable_motor_sync_accel: 500


# Runtime - Do not set!!!
variable_commanded_angle: 0  # keeping track of the commanded angle
variable_selected_lane: -1   # -1 parked
variable_selected_idle: -1   # -1 parked
variable_is_lane_selected: -1  # 1 if a lane is selected , -1 is parked



gcode:


#### ------ PLAYGROUND ----------

## Try: _SP_SERVO ANGLE=50 
## Try: _SP_TEST_ITER TIMES=2


[gcode_macro _SP_PRINT_TEST]
gcode:
   RESPOND MSG="Servo Angle: {printer['servo sp_servo'].value}"
   RESPOND MSG="TEST VALUE:  {printer.configfile.settings['servo sp_servo'].maximum_servo_angle} " 
   

[gcode_macro _SP_TEST_ITER]
gcode:
  {% set times = params.TIMES| default(2) | int %}
  {% for i in range(times) %}
    _SP_TEST
  {%endfor%}
  _SP_SERVO ANGLE=0
  _SP_MOTOR_OFF
  
  
[gcode_macro _SP_TEST]
gcode:
  {% set sp = printer['gcode_macro _SP_VARS'] %}
    
  {% for i in range(sp.lanes) %}
    {% if i != 1 %}
      RESPOND MSG="Servo commanded to: {sp.angles[i]}" 
      _SP_SERVO ANGLE={sp.angles[i]}
      _SP_MOTOR POS=100
      _SP_MOTOR POS=-100
     {%endif%} 
  {% endfor %}





#### ------ READ DEAL ----------


[gcode_macro _SP_PARK]
gcode:
  SET_SERVO SERVO=sp_servo ANGLE=0
  
  SET_GCODE_VARIABLE MACRO=_SP_VARS VARIABLE=commanded_angle VALUE=0
  SET_GCODE_VARIABLE MACRO=_SP_VARS VARIABLE=selected_lane VALUE=-1
  SET_GCODE_VARIABLE MACRO=_SP_VARS VARIABLE=selected_idle VALUE=-1
  SET_GCODE_VARIABLE MACRO=_SP_VARS VARIABLE=is_lane_selected VALUE=-1
  

[gcode_macro _SP_SET_ANGLE_OFFSET]
gcode:
  SET_GCODE_VARIABLE MACRO=_SP_VARS VARIABLE=angle_offset VALUE={params.VALUE|float}
  
  
[gcode_macro _SP_SERVO]
gcode:
  SET_GCODE_VARIABLE MACRO=_SP_VARS VARIABLE=commanded_angle VALUE={params.ANGLE|float}

  {% set sp = printer['gcode_macro _SP_VARS'] %}
  {% set angle = params.ANGLE|float + sp.angle_offset|float %}
  {% set angle = [angle, printer.configfile.settings['servo sp_servo'].maximum_servo_angle] | min %}
  
  SET_SERVO SERVO=sp_servo ANGLE={angle}
  RESPOND MSG="Servo angle: {params.ANGLE | float} with offset: {angle}"    # Debug
  G4 P{1000*sp.switch_time}                # Wait

  
[gcode_macro _SP_MOTOR]
gcode:
  {% set sp = printer['gcode_macro _SP_VARS'] %}
  {% set speed = params.SPEED| default(sp.motor_speed) | int %}
  {% set accel = params.ACCEL| default(sp.motor_accel) | int %}
  {% set pos = params.POS| default(0) | float %}
  
  MANUAL_STEPPER STEPPER=sp_motor ENABLE=1 SET_POSITION=0 SPEED={speed} ACCEL={accel} MOVE={pos} 


[gcode_macro _SP_MOTOR_OFF]
gcode:
  MANUAL_STEPPER STEPPER=sp_motor ENABLE=0
  
